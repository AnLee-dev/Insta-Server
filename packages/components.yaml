components:
  schemas:
    Chat:
      type: object
      properties:
        id:
          type: string
        status:
          type: boolean
        currentStep:
          type: number
        userLine:
          type: string
        userName:
          type: string
        questionnaires:
          type: [string]
        metting:
          type: string
      example:
        id: 5ebac534954b54139806c112
        status: false
        currentStep: 1
        userName: 'DangNh Test'
        questionnaires: ['1','2','3']
        language: 'en'
        metting: string
    Post:
      type: object
      properties:
        id:
          type: string
        media:
          type: [object]
        comment:
          type: [object]
        captionText:
          type: string
        hasLiked:
          type: boolean
        likeCount:
          type: number
        publisherId:
          type: string
      example:
        id: 5ebac534954b54139806c112
        media: [
          {
            mediaUrl: https://images.unsplash.com/photo-1521038199265-bc482db0f923?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8YW1lcmljYW4lMjBnaXJsfGVufDB8fDB8fA%3D%3D&w=1000&q=80,
            poster: https://images.unsplash.com/photo-1521038199265-bc482db0f923?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8YW1lcmljYW4lMjBnaXJsfGVufDB8fDB8fA%3D%3D&w=1000&q=80
          }
        ]
        comment: []
        captionText: 'Caption test'
        hasLiked: true
        likeCount: 20
        publisherId: 645878f253cec6082c9fcd34

    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [user, admin]
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        name: fake name
        role: user

    Meeting:
      type: object
      properties:
        id:
          type: string
        zoomId:
          typee: string
        userLine:
          type: string
        userName:
          type: string
        timeStart:
          type: string
          format: date-time
        linkHost:
          type: string
        linkJoin:
          type: string
        status:
          type: boolean
      example:
        id: 5ebac534954b54139806c112
        zoomId: zupF+IqFSf+D/g6yjnP
        userLine: Ua2a4912f254fa5b676f082067ae2d9f3
        useName: fake name
        timeStart: 2020-05-12T16:18:04.793Z
        linkHost: https://us05web.zoom.us/s/83879521260?zak=eyJ0eXAiOiJKV1QiLCJzdiI6IjAw
        linkJoin: https://us05web.zoom.us/s/83879521260?pwd=cXI5aVFWb1I1aEp5aFlURzZFcGw
        status: false

    UserLine:
      type: object
      properties:
        id:
          type: string
        userLine:
          type: string
        userName:
          type: string
        pictureUrl:
          type: string
        statusMessage:
          type: boolean
        language:
          type: string
        address:
          type: string
        phone:
          type: number
      example:
        id: 5ebac534954b54139806c112
        userLine: fake@example.com
        userName: fake name
        pictureUrl: ''
        statusMessage: true
        language: 'en'
        address: ''
        phone: 0793129999

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    UserWithTokens:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        tokens:
          $ref: '#/components/schemas/AuthTokens'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
